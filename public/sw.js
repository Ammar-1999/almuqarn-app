let SITE_URL = "https://almuqarn.pages.dev", VERSION = "5.94";
self.skipWaiting(),self.addEventListener("install",()=>{}),self.addEventListener("activate",evt=>{evt.waitUntil(caches.keys().then(keys=>Promise.all(keys.filter(e=>!e.endsWith(VERSION)).map(key=>caches.delete(key)))).then(()=>{clients.claim(),self.skipWaiting()}))});let retry=async(retries=0,req)=>{try{return await fetch(req,req.url.startsWith(SITE_URL)?{}:{mode:"no-cors"})}catch(_){if(retries>0)return retry(retries-1,req)}},cacheFirst=async(e,cacheName,isRetry)=>{try{let res;let req=e.request,Cache=await caches.open(cacheName),match=await Cache.match(req.url);if(match)return match;if((res=isRetry?await retry(5,req):await fetch(req,req.url.startsWith(SITE_URL)?{}:{mode:"no-cors"}))&&res.ok||res&&!req.url.startsWith(SITE_URL)){let clone=res.clone();await Cache.put(req.url,clone)}return res}catch(_){return Response.error()}},NetworkFirst=async(e,cacheName)=>{let req=e.request,Cache=await caches.open(cacheName);try{let res=await fetch(req,req.url.startsWith(SITE_URL)?{}:{mode:"no-cors"});if(res&&res.ok||res&&!req.url.startsWith(SITE_URL)){let clone=res.clone();Cache.put(req.url,clone)}return res}catch(_){let match=await Cache.match(req.url);if(match)return match;return Response.error()}};async function fetchAndCacheIfOk(req,Cache){try{let response=await fetch(req,req.url.startsWith(SITE_URL)?{}:{mode:"no-cors"});if(response&&response.ok||response&&!req.url.startsWith(SITE_URL)){let res=response.clone();await Cache.put(req.url,res)}return response}catch(_){return Response.error()}}let StaleWhileRevalidate=async(e,cacheName)=>{let req=e.request,Cache=await caches.open(cacheName),match=await Cache.match(req.url);return match?(fetchAndCacheIfOk(req,Cache),match):fetchAndCacheIfOk(req,Cache)};self.addEventListener("fetch",async evt=>{var _evt$request,_evt$request$headers$;let url=evt.request.url;if((null===(_evt$request=evt.request)||void 0===_evt$request?void 0:_evt$request.method)==="GET"&&-1===url.indexOf(SITE_URL+"/api/")){let staticNext=url.indexOf("/_next/static")>-1,prefetch=url.indexOf("?_rsc=");staticNext?evt.respondWith(cacheFirst(evt,`next-static-${VERSION}`,!0)):/^https:\/\/almuqarn\.pages\.dev\/.+\.js$/.test(url)?evt.respondWith(cacheFirst(evt,`public-JS-${VERSION}`,!0)):/^https:\/\/almuqarn\.pages\.dev\/.+\.(?:css|less)$/.test(url)?evt.respondWith(cacheFirst(evt,`public-CSS-${VERSION}`,!0)):/\/(manifest.json)/.test(url)?evt.respondWith(cacheFirst(evt,`glocal-assets-${VERSION}`,!0)):/^https:\/\/fonts\.gstatic\.com\/.*/i.test(url)?evt.respondWith(cacheFirst(evt,`google-fonts-static-${VERSION}`,!0)):/^https:\/\/fonts\.googleapis\.com\/.*/i.test(url)?evt.respondWith(StaleWhileRevalidate(evt,`google-fonts-${VERSION}`)):/\.(?:jpg|jpeg|gif|png|svg|ico|webp)$/i.test(url)?evt.respondWith(cacheFirst(evt,`static-image-${VERSION}`,!0)):/\.(?:eot|otf|ttc|ttf|woff|woff2|font.css)$/i.test(url)?evt.respondWith(cacheFirst(evt,`static-font-${VERSION}`,!0)):/\.(?:css|less)$/i.test(url)?evt.respondWith(StaleWhileRevalidate(evt,`static-style-${VERSION}`)):prefetch&&"1"==evt.request.headers.get("rsc")?evt.respondWith(StaleWhileRevalidate(evt,`pages-prefetch-${VERSION}`)):"document"===evt.request.destination&&(null===(_evt$request$headers$=evt.request.headers.get("accept"))||void 0===_evt$request$headers$?void 0:_evt$request$headers$.indexOf("text/html"))!==-1&&evt.respondWith(NetworkFirst(evt,`pages-${VERSION}`))}});